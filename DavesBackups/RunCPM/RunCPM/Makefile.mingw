# Generic MinGW makefile (C source only)
# Modify variables/macros to fit your program

# make / make all | will compile your program.
# make clean      | deletes all compiled object and executable files.
# make depend     | rebuilds the dependancy list
# make run        | compiles (if needed) and runs your program

# Compiler command
CC = gcc.exe

# Linker command
LD = gcc.exe

# Flags to pass to the compiler - add "-g" to include debug information
CFLAGS = -Wall -O0
#CFLAGS = -Wall -O0 -g

# Flags to pass to the linker
LDFLAGS = -mconsole

# Command used to delete files
RM = rm.exe -f

# List your object files here
OBJS = main.o z80.o

# List your source files here
SRCS = main.c z80.c

# Define your compile target here.
PROG = RunCPM.exe

# Link the program
$(PROG): $(OBJS)
	$(LD) $(LDFLAGS) $(OBJS) -o $(PROG)

# All .o files depend on their corresponding .c file
%.o: %.c
	$(CC) $(CFLAGS) -c $< 2>&1 | sed -e "s/:/(/" -e "s/:/,/" -e "s/:/):/"

# Compile everything.
all: clean $(PROG)

clean:
	$(RM) $(PROG)
	$(RM) *.o

run: all
	$(PROG)